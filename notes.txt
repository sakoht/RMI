
Key differences are summarized below:

=head2 Java

With Java RMI, each object has its own URL, and all RMI is over TCP/IP.

There are no static class method calls.  The RMI system is bootstrapped by
having an RMI Name server listen on a well-known port (1099).  It is effectively
an plain RMI object which takes a text key, and returns another object.

Each RMI proxy object has its own private equivalent to RMI::Client.

The RMI protocol for Java is complicated because the client side must have
"stub" classes which know they implement the same interface as the real object,
but are remote.  The real object on the server side must impliment a particular
interface for that interface to be remotable.

=head2 Ruby

DRb, "distributed ruby", also is a TCP/IP RMI system.  With Ruby, each program
which uses the "drb" module spawns a thread which handles all remote interaction.

A DRb app has a special "front" object, and that object is _always_ passed to
any connection request.  All other objects must come from the front object.

=head2 Pyro

The Python 
